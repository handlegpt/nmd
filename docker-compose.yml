version: '3.8'

services:
  # Next.js Application
  nomad-now:
    build: 
      context: .
      args:
        - NODE_ENV=production
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    ports:
      - "3011:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOSTNAME=0.0.0.0
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    networks:
      - nomad-network

  # Directus CMS - Using direct Supabase connection
  directus:
    image: directus/directus:latest
    container_name: nomad-directus
    ports:
      - "8055:8055"
    environment:
      KEY: "${KEY}"
      SECRET: "${SECRET}"
      # Use direct Supabase database connection (not pooler)
      DB_CLIENT: "pg"
      DB_HOST: "db.xdpjstyoeqgvaacduzdw.supabase.co"
      DB_PORT: "5432"
      DB_DATABASE: "postgres"
      DB_USER: "postgres.xdpjstyoeqgvaacduzdw"
      DB_PASSWORD: "${DB_PASSWORD}"
      # SSL configuration for direct connection
      DB_SSL: "true"
      DB_SSL_REJECT_UNAUTHORIZED: "false"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
      # Connection pool settings
      DB_POOL_MIN: "1"
      DB_POOL_MAX: "5"
      DB_POOL_ACQUIRE_TIMEOUT: "60000"
      DB_POOL_IDLE_TIMEOUT: "30000"
      # Cache configuration
      CACHE_ENABLED: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://redis:6379"
      # Admin configuration
      ADMIN_EMAIL: "${ADMIN_EMAIL:-admin@nomad.now}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      PUBLIC_URL: "${PUBLIC_URL:-http://localhost:8055}"
      # Auth configuration
      AUTH_PROVIDERS: ""
      AUTH_DISABLE_DEFAULT: "false"
      # Other settings
      TELEMETRY: "false"
      STORAGE_LOCATIONS: "local"
      STORAGE_LOCAL_DRIVER: "local"
      STORAGE_LOCAL_ROOT: "/directus/uploads"
      # Database migrations
      DB_MIGRATIONS: "true"
      DB_MIGRATIONS_TABLE: "directus_migrations"
    volumes:
      - directus_uploads:/directus/uploads
      - directus_snapshots:/directus/snapshots
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8055/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - nomad-network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: nomad-redis
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - nomad-network

networks:
  nomad-network:
    driver: bridge

volumes:
  directus_uploads:
  directus_snapshots:
  redis_data: 